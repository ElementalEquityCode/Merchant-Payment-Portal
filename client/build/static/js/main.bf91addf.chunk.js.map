{"version":3,"sources":["Components/Presentational/DateComponent/DateComponent.js","Components/Presentational/InputTextFieldContainer/InputTextFieldContainer.js","Components/Presentational/GeneralUIElementContainer/GeneralUIElementContainer.js","Assets/cvc-icon.svg","Components/Containers/Input/InputTextField/CreditCardIconsContainer/Credit Card Icons/visa-icon.svg","Components/Containers/Input/InputTextField/CreditCardIconsContainer/Credit Card Icons/mastercard-icon.svg","Components/Containers/Input/InputTextField/CreditCardIconsContainer/Credit Card Icons/amex-icon.svg","Components/Containers/Input/InputTextField/CreditCardIconsContainer/MajorCardBrandsContainer/MajorCardBrandsContainer.js","Components/Containers/Input/InputTextField/CreditCardIconsContainer/Credit Card Icons/diners-club-icon.svg","Components/Containers/Input/InputTextField/CreditCardIconsContainer/Credit Card Icons/discover-icon.svg","Components/Containers/Input/InputTextField/CreditCardIconsContainer/Credit Card Icons/jcb-icon.svg","Components/Containers/Input/InputTextField/CreditCardIconsContainer/Credit Card Icons/union-pay-icon.svg","Components/Containers/Input/InputTextField/CreditCardIconsContainer/MinorCardBrandsContainer/MinorCardBrandsContainer.js","Components/Containers/Input/InputTextField/CreditCardIconsContainer/MobilePhonesCardBrandsContainer/MobilePhonesCardBrandsContainer.js","Components/Containers/Input/InputTextField/CreditCardIconsContainer/EnteredCardBrandContainer/EnteredCardBrandContainer.js","Context/CardBrandContext.js","Components/Containers/Input/InputTextField/CreditCardIconsContainer/CreditCardIconsContainer.js","Components/Presentational/ErrorStateExclamationPoint/ErrorStateExclamationPoint.js","Components/Containers/Input/InputTextField/InputTextField.js","Assets/lock.svg","Components/Containers/Input/GeneralActionButton/GeneralActionButton.js","Components/Presentational/ModalContainer/ModalContainer.js","Assets/contact-form.svg","Components/Containers/Input/AmounToPayTextField/AmountToPayTextField.js","Components/Presentational/Separator/Separator.js","Components/Presentational/FromAndToPaymentContainer/FromAndToPaymentContainer.js","Assets/company-logo.svg","Assets/checkmark.svg","Components/Containers/PaymentConfirmationModal/PaymentConfirmationModal.js","Components/Containers/PaymentError/PaymentError.js","Axios/session.js","Assets/powered-by-stripe-white.svg","Components/Containers/PaymentForm/PaymentForm.js","Assets/twitter-logo.svg","App.js","reportWebVitals.js","index.js","Components/Containers/PaymentForm/PaymentForm.module.css","Components/Presentational/InputTextFieldContainer/InputTextFieldContainer.module.css","Components/Containers/Input/InputTextField/InputTextField.module.css","Components/Presentational/ErrorStateExclamationPoint/ErrorStateExclamationPoint.module.css","Components/Presentational/FromAndToPaymentContainer/FromAndToPaymentContainer.module.css","Components/Containers/Input/AmounToPayTextField/AmountToPayTextField.module.css","Components/Containers/Input/InputTextField/CreditCardIconsContainer/MajorCardBrandsContainer/MajorCardBrandsContainer.module.css","Components/Containers/Input/InputTextField/CreditCardIconsContainer/MinorCardBrandsContainer/MinorCardBrandsContainer.module.css","Components/Containers/Input/InputTextField/CreditCardIconsContainer/MobilePhonesCardBrandsContainer/MobilePhonesCardBrandsContainer.module.css","Components/Presentational/Footer/Footer.module.css","Components/Containers/PaymentConfirmationModal/PaymentConfirmationModal.module.css","Components/Containers/Input/InputTextField/CreditCardIconsContainer/EnteredCardBrandContainer/EnteredCardBrandContainer.module.css","Components/Containers/Input/GeneralActionButton/GeneralActionButton.module.css","Components/Presentational/CompanyNameAndLogo/CompanyNameAndLogo.module.css","Components/Containers/PaymentError/PaymentError.module.css","Components/Presentational/DateComponent/DateComponent.module.css","Components/Presentational/GeneralUIElementContainer/GeneralUIElementContainer.module.css","Components/Containers/Input/InputTextField/CreditCardIconsContainer/CreditCardIconsContainer.module.css","Components/Presentational/ModalContainer/ModalContainer.module.css","Components/Presentational/Separator/Separator.module.css"],"names":["DateComponent","date","Date","year","getFullYear","month","getMonth","day","getDate","fullDate","className","styles","dateText","React","memo","InputTextFieldContainer","props","Container","headerContainer","undefined","containerText","shouldDisplayRequired","requiredText","visible","children","GeneralUIElementContainer","MajorCardBrandsContainer","CreditCardIconsContainer","creditCardIcon","src","VisaIcon","MasterCardIcon","AmexIcon","MinorCardBrandsContainer","state","currentlyDisplayedImage","images","DinersClubIcon","DiscoverIcon","JCBIcon","UnionPayIcon","changeCardBrandIconTimer","updateDOMNodeClassListToVisible","domNodeRef","current","classList","add","updateDOMNodeClassListToInvisible","remove","componentDidMount","setTimeout","setInterval","setState","oldState","componentDidUpdate","componentWillUnmount","clearInterval","createRef","ref","this","PureComponent","MobilePhonesCardBrandsContainer","EnteredCardBrandContainer","cardBrand","image","useRef","useEffect","context","createContext","screenSize","renderLargeScreensCardBrandsContainer","cardBrandsContainer","renderMobilePhonesCardBrandsContainer","window","matchMedia","addListener","mediaQueryHandler","innerWidth","contextType","CardBrandContext","ErrorStateExclamationPoint","ErrorStateExclamationWrapper","displayed","errorStatePointerContainer","errorStatePointer","InputTextField","style","base","color","fontSize","fontWeight","backgroundColor","lineHeight","height","invalid","isFocused","inputtedText","handleClick","event","shouldDisplayOverlay","target","textFieldRef","preventDefault","type","focus","setActiveHandler","onBlurHandler","formatInputtedText","value","includes","replace","changeEvent","renderInputFields","inputTextFieldContainer","textFieldContainerClassNames","textFieldContainerView","inputField","push","focusedInputTextField","focusedTextFieldContainerView","errorState","errorStateInputTextField","paymentProcessingTextFieldContainerView","ccInputTextField","ccTextFieldContainerView","options","disabled","onChange","onReady","textField","onFocus","onBlur","dateInputTextField","dateTextFieldContainerView","cvcInputTextField","cvcTextFieldContainerView","fullWidthInputTextField","fullWidthTextFieldContainerView","inputMode","maxLength","autocapitalize","placeholder","join","onMouseDown","renderIconsContainer","iconsContainer","icon","invisible","CVCIcon","alt","width","nextProps","nextState","Component","GeneralActionButton","isCurrentlyClicked","onMouseClickPress","onMouseClickRelease","handleOnMouseLeave","renderLottieAnimation","animationOptions","loop","autoplay","animationData","LoadingAnimation","lottieContainer","renderLockContainer","lockContainer","isActive","lock","LockSVG","renderPayWithCardButton","buttonContentsContainer","isProcessingPayment","buttonTextContainer","withLottiePadding","text","PayButton","withBackgroundColor","button","active","onMouseUp","onMouseLeave","onClick","onClickHandler","ModalContainer","AmountToPayTextField","test","textChanged","ComponentContainer","amountToPayTextFieldContainerWrapper","focusedWrapper","amountToPayTextFieldContainer","focused","dollarSignContainer","dollarSign","textFieldContainer","amountToPayText","inputTextField","errorStateExclamationWrapper","contactFormSVGContainer","contactFormSVG","ContactFormSVG","Separator","FromAndToPaymentContainer","rawText","lineBreak","nameText","businessName","customerName","PaymentConfirmationModal","unixTimestamp","paymentDate","formattedAmountPaid","amountPaid","length","substring","svgContainer","paymentConfirmationContactForm","checkoutCheckmark","Checkmark","containerFooter","invoicePaidText","amountPaidText","flexContainers","flexContainer","firstColumnText","secondColumnText","confirmationCode","String","paymentMethodCardBrand","charAt","toUpperCase","lastFourOfPaymentMethod","thankYouText","PaymentError","errorTextContainer","errorText","errorMessage","productionInstance","axios","create","baseURL","validator","require","stripePromise","loadStripe","PaymentForm","amount","isInErrorState","email","clientName","ccNumber","isComplete","expiryDate","cvc","isPayWithCardButtonActive","isPaymentRequestProcessing","received200StatusCode","paymentErrorMessage","paymentConfirmation","amountChangedHandler","handleCheckFormInput","emailChangedHandler","newEmail","validate","clientNameChangedHandler","newName","ccNumberChangedHandler","brand","complete","expiryDateChangedHandler","cvcChangedHandler","handlePayButtonClick","formSubmissionHandler","elements","stripe","a","cardElement","getElement","CardNumberElement","createPaymentMethod","card","error","paymentMethod","handleErrorMessageFromStripeAPIOrServer","performHTTPRequest","payload","name","amountToPay","post","then","response","handle200StatusCodeFromServer","data","clientSecret","catch","paymentClientSecret","confirmCardPayment","payment_method","id","result","message","paymentIntent","created","last4","renderPaymentForm","onSubmit","e","delay","transitionDuration","href","PoweredByStripe","paymentInformationFieldsContainer","overlay","Provider","renderPaymentErrorComponent","paymentErrorAnimationContainer","renderPaymentConfirmationModal","InjectedForm","render","jsx","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bf91addf.chunk.js","sourcesContent":["import styles from './DateComponent.module.css'\nimport React from 'react'\n\nconst DateComponent = () => {\n\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"October\", \"November\", \"December\"]\n    const date = new Date()\n    const year = date.getFullYear()\n    const month = date.getMonth()\n    const day = date.getDate()\n    const fullMonth = months[month]\n\n    const fullDate = fullMonth + \", \" + day + \" \" + year\n\n    return (\n        <div className={styles.dateText}>{fullDate}</div>\n    )\n    \n}\n\nexport default React.memo(DateComponent);","import styles from './InputTextFieldContainer.module.css'\nimport React from 'react'\n\nconst InputTextFieldContainer = props => {\n\n    return (\n        <div className={styles.Container}>\n            <div className={styles.headerContainer}>\n                {props.containerText !== undefined ? <div className={styles.containerText}>{props.containerText}</div> : null}\n                <span className={props.shouldDisplayRequired ? `${styles.requiredText} ${styles.visible}` : `${styles.requiredText}`}>Required</span>\n            </div>\n            {props.children}\n        </div>\n    )\n    \n}\n\nexport default React.memo(InputTextFieldContainer)","import styles from './GeneralUIElementContainer.module.css'\nimport React from 'react'\n\nconst GeneralUIElementContainer = props => {\n\n    return (\n        <div className={styles.GeneralUIElementContainer}>\n            {props.children}\n        </div>\n    )\n    \n}\n\nexport default React.memo(GeneralUIElementContainer)","export default __webpack_public_path__ + \"static/media/cvc-icon.7f042d13.svg\";","export default __webpack_public_path__ + \"static/media/visa-icon.76d7719c.svg\";","export default __webpack_public_path__ + \"static/media/mastercard-icon.18be7de6.svg\";","export default __webpack_public_path__ + \"static/media/amex-icon.8bdbf30e.svg\";","import React from 'react'\nimport styles from './MajorCardBrandsContainer.module.css'\nimport FadeIn from 'react-fade-in'\nimport VisaIcon from '../Credit Card Icons/visa-icon.svg'\nimport MasterCardIcon from '../Credit Card Icons/mastercard-icon.svg'\nimport AmexIcon from '../Credit Card Icons/amex-icon.svg'\n\n\nconst MajorCardBrandsContainer = props => {\n\n    return (\n        <div className={styles.CreditCardIconsContainer}>\n            <img className={styles.creditCardIcon} src={VisaIcon} />\n            <img className={styles.creditCardIcon} src={MasterCardIcon} />\n            <img className={styles.creditCardIcon} src={AmexIcon} />\n        </div>\n    )\n    \n}\n\nexport default React.memo(MajorCardBrandsContainer)","export default __webpack_public_path__ + \"static/media/diners-club-icon.17c01363.svg\";","export default __webpack_public_path__ + \"static/media/discover-icon.e0357901.svg\";","export default __webpack_public_path__ + \"static/media/jcb-icon.2f8d08f3.svg\";","export default __webpack_public_path__ + \"static/media/union-pay-icon.0b4d3e04.svg\";","import React, { PureComponent } from 'react'\nimport styles from './MinorCardBrandsContainer.module.css'\nimport DinersClubIcon from '../Credit Card Icons/diners-club-icon.svg'\nimport DiscoverIcon from '../Credit Card Icons/discover-icon.svg'\nimport JCBIcon from '../Credit Card Icons/jcb-icon.svg'\nimport UnionPayIcon from '../Credit Card Icons/union-pay-icon.svg'\n\nclass MinorCardBrandsContainer extends PureComponent {\n\n    constructor(props) {\n        super(props)\n        this.domNodeRef = React.createRef(null)\n    }\n\n    state = {\n        currentlyDisplayedImage: 0\n    }\n\n    images = [DinersClubIcon, DiscoverIcon, JCBIcon, UnionPayIcon]\n\n    changeCardBrandIconTimer = null\n\n    updateDOMNodeClassListToVisible = () => {\n        if (this.domNodeRef.current !== null) {\n            this.domNodeRef.current.classList.add(`${styles.visible}`)\n        }\n    }\n\n    updateDOMNodeClassListToInvisible = () => {\n        if (this.domNodeRef.current !== null) {\n            this.domNodeRef.current.classList.remove(`${styles.visible}`)\n        }\n    }\n\n    render() {\n        return (\n            <div className={styles.CreditCardIconsContainer}>\n                <img ref={this.domNodeRef} className={styles.creditCardIcon} src={this.images[this.state.currentlyDisplayedImage]} />\n            </div>\n        )\n    }\n\n    componentDidMount = () => {\n        this.updateDOMNodeClassListToVisible()\n\n        setTimeout(() => {\n            this.updateDOMNodeClassListToInvisible()\n        }, 2000)\n\n        this.changeCardBrandIconTimer = setInterval(() => {\n\n            this.setState((oldState, props) => {\n                return {\n                    currentlyDisplayedImage: oldState.currentlyDisplayedImage === 3 ? 0 : oldState.currentlyDisplayedImage + 1\n                }\n            })\n\n        }, 2500)\n    }\n\n    componentDidUpdate = () => {\n        this.updateDOMNodeClassListToVisible()\n        setTimeout(() => {\n            this.updateDOMNodeClassListToInvisible()\n        }, 2000)\n    }\n\n    componentWillUnmount = () => {\n        clearInterval(this.changeCardBrandIconTimer)\n    }\n    \n}\n\nexport default MinorCardBrandsContainer","import React, { PureComponent } from 'react'\nimport styles from './MobilePhonesCardBrandsContainer.module.css'\nimport VisaIcon from '../Credit Card Icons/visa-icon.svg'\nimport MasterCardIcon from '../Credit Card Icons/mastercard-icon.svg'\nimport AmexIcon from '../Credit Card Icons/amex-icon.svg'\nimport DinersClubIcon from '../Credit Card Icons/diners-club-icon.svg'\nimport DiscoverIcon from '../Credit Card Icons/discover-icon.svg'\nimport JCBIcon from '../Credit Card Icons/jcb-icon.svg'\nimport UnionPayIcon from '../Credit Card Icons/union-pay-icon.svg'\n\nclass MobilePhonesCardBrandsContainer extends PureComponent {\n\n    constructor(props) {\n        super(props)\n        this.domNodeRef = React.createRef(null)\n    }\n\n    state = {\n        currentlyDisplayedImage: 0\n    }\n\n    images = [VisaIcon, MasterCardIcon, AmexIcon, DinersClubIcon, DiscoverIcon, JCBIcon, UnionPayIcon]\n\n    changeCardBrandIconTimer = null\n\n    updateDOMNodeClassListToVisible = () => {\n        if (this.domNodeRef.current !== null) {\n            this.domNodeRef.current.classList.add(`${styles.visible}`)\n        }\n    }\n\n    updateDOMNodeClassListToInvisible = () => {\n        if (this.domNodeRef.current !== null) {\n            this.domNodeRef.current.classList.remove(`${styles.visible}`)\n        }\n    }\n\n    render() {\n        return (\n            <div className={styles.CreditCardIconsContainer}>\n                <img ref={this.domNodeRef} className={styles.creditCardIcon} src={this.images[this.state.currentlyDisplayedImage]} />\n            </div>\n        )\n    }\n\n    componentDidMount = () => {\n        this.updateDOMNodeClassListToVisible()\n\n        setTimeout(() => {\n            this.updateDOMNodeClassListToInvisible()\n        }, 2000)\n\n        this.changeCardBrandIconTimer = setInterval(() => {\n\n            this.setState((oldState, props) => {\n                return {\n                    currentlyDisplayedImage: oldState.currentlyDisplayedImage === 6 ? 0 : oldState.currentlyDisplayedImage + 1\n                }\n            })\n\n        }, 2500)\n    }\n\n    componentDidUpdate = () => {\n        this.updateDOMNodeClassListToVisible()\n        setTimeout(() => {\n            this.updateDOMNodeClassListToInvisible()\n        }, 2000)\n    }\n\n    componentWillUnmount = () => {\n        clearInterval(this.changeCardBrandIconTimer)\n    }\n    \n}\n\nexport default MobilePhonesCardBrandsContainer","import React, { useEffect, useRef } from 'react'\nimport styles from './EnteredCardBrandContainer.module.css'\nimport VisaIcon from '../Credit Card Icons/visa-icon.svg'\nimport MasterCardIcon from '../Credit Card Icons/mastercard-icon.svg'\nimport AmexIcon from '../Credit Card Icons/amex-icon.svg'\nimport DinersClubIcon from '../Credit Card Icons/diners-club-icon.svg'\nimport DiscoverIcon from '../Credit Card Icons/discover-icon.svg'\nimport JCBIcon from '../Credit Card Icons/jcb-icon.svg'\nimport UnionPayIcon from '../Credit Card Icons/union-pay-icon.svg'\n\nconst EnteredCardBrandContainer = props => {\n\n    const cardBrand = props.cardBrand\n    let image = null\n    const domNodeRef = useRef(null)\n\n    useEffect(() => {\n        setTimeout(() => {\n            domNodeRef.current.classList.add(`${styles.visible}`)\n        }, 100)\n    }, [props.cardBrand])\n\n    switch (cardBrand) {\n        case \"visa\": image = VisaIcon\n        break\n        case \"mastercard\": image = MasterCardIcon\n        break\n        case \"amex\": image = AmexIcon\n        break\n        case \"diners\": image = DinersClubIcon\n        break\n        case \"discover\": image = DiscoverIcon\n        break\n        case \"jcb\": image = JCBIcon\n        break\n        case \"unionpay\": image = UnionPayIcon\n    }\n\n    return (\n        <div className={styles.CreditCardIconsContainer}>\n            <img ref={domNodeRef} className={styles.creditCardIcon} src={image} />\n        </div>\n    )\n    \n}\n\nexport default EnteredCardBrandContainer","import React from 'react'\n\nconst context = React.createContext({\n    cardBrand: 'unknown'\n})\n\nexport default context","import React, { Component, PureComponent } from 'react'\nimport styles from './CreditCardIconsContainer.module.css'\nimport MajorCardBrandsContainer from './MajorCardBrandsContainer/MajorCardBrandsContainer'\nimport MinorCardBrandsContainer from './MinorCardBrandsContainer/MinorCardBrandsContainer'\nimport MobilePhonesCardBrandsContainer from './MobilePhonesCardBrandsContainer/MobilePhonesCardBrandsContainer'\nimport EnteredCardBrandContainer from './EnteredCardBrandContainer/EnteredCardBrandContainer'\nimport CardBrandContext from '../../../../../Context/CardBrandContext'\nimport FadeIn from 'react-fade-in'\n\nclass CreditCardIconsContainer extends PureComponent {\n\n    state = {\n        screenSize: null\n    }\n\n    static contextType = CardBrandContext\n\n    renderLargeScreensCardBrandsContainer = () => {\n        return (\n            <div className={styles.cardBrandsContainer}>\n                <MajorCardBrandsContainer />\n                <MinorCardBrandsContainer />\n            </div>\n        )\n    }\n\n    renderMobilePhonesCardBrandsContainer = () => {\n        return <MobilePhonesCardBrandsContainer />\n    }\n\n    render() {\n        let component = null;\n\n        if (this.context.cardBrand === 'unknown') {\n            component = this.state.screenSize === null ? null : this.state.screenSize === \"large\" ? this.renderLargeScreensCardBrandsContainer() : this.renderMobilePhonesCardBrandsContainer()\n        } else {\n            component = <EnteredCardBrandContainer cardBrand={this.context.cardBrand} />\n        }\n\n        return component\n    }\n\n    componentDidMount = () => {\n        let mediaQuery = window.matchMedia('(max-width: 450px)')\n        mediaQuery.addListener(this.mediaQueryHandler)\n        this.mediaQueryHandler()\n    }\n\n    mediaQueryHandler = () => {\n        if (window.innerWidth <= 450) {\n            this.setState({\n                screenSize: 'small'\n            })\n        } else {\n            this.setState({\n                screenSize: 'large'\n            })\n        }\n    }\n    \n}\n\nexport default CreditCardIconsContainer","import styles from './ErrorStateExclamationPoint.module.css'\nimport React from 'react'\n\nconst ErrorStateExclamationPoint = (props) => {\n\n    return (\n        <div className={styles.ErrorStateExclamationWrapper}>\n            <span className={props.displayed ? `${styles.errorStatePointerContainer} ${styles.visible}` : `${styles.errorStatePointerContainer}`}>\n                <span className={styles.errorStatePointer}>!</span>\n            </span>\n        </div>\n    )\n    \n}\n\nexport default React.memo(ErrorStateExclamationPoint)","import styles from './InputTextField.module.css'\nimport React, { Component } from 'react'\nimport { CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js'\nimport CVCIcon from '../../../../Assets/cvc-icon.svg'\nimport CreditCardIconsContainer from './CreditCardIconsContainer/CreditCardIconsContainer.js'\nimport ErrorStateExclamationPoint from '../../../Presentational/ErrorStateExclamationPoint/ErrorStateExclamationPoint'\n\nclass InputTextField extends Component {\n\n    style = {\n        style: {\n            base: {\n                color: 'rgba(26,26,26,.9)',\n                fontSize: '16px',\n                fontWeight: '200',\n                backgroundColor: 'rgba(0,0,0,0)',\n                lineHeight: '2.4em',\n                height: '38px'\n            },\n            invalid: {\n                color: 'rgb(235, 56, 42)'\n            }\n        }\n    }\n\n    state = {\n        isFocused : false,\n        inputtedText: null\n    }\n\n    constructor (props) {\n        super(props)\n        \n        this.textFieldRef = React.createRef(null)\n    }\n\n    handleClick = event => {\n        if (this.props.shouldDisplayOverlay) {\n            return\n        }\n\n        if (event.target !== this.textFieldRef.current) {\n            event.preventDefault()\n        }\n\n        if (!this.state.isFocused && (this.textFieldRef !== null || this.textFieldRef.current !== null)) {\n            if (this.props.type === \"email\" || this.props.type === \"name\") {\n                this.textFieldRef.current.focus()\n            } else {\n                this.textFieldRef.focus()\n            }\n            this.setState({\n                isFocused: true\n            })\n        }\n    }\n\n    setActiveHandler = () => {\n        this.setState({\n            isFocused: true\n        })\n    };\n\n    onBlurHandler = () => {\n        this.setState({\n            isFocused: false\n        })\n    }\n\n    formatInputtedText = event => {\n        if (this.props.type === 'name' || this.props.type === 'email') {\n            if (event.target.value === \" \") {\n                event.target.value = \"\"\n            }\n\n            if (this.props.type === \"email\") {\n                if (event.target.value.includes(\" \")) {\n                    event.target.value = event.target.value.replace(\" \", \"\")\n                }\n            }\n        }\n        this.props.changeEvent(event.target.value)\n        this.setState({\n            inputtedText: event.target.value + \"\"\n        })\n    }\n\n    renderInputFields = () => {\n        let inputTextFieldContainer = [`${styles.InputTextField}`];\n        let textFieldContainerClassNames = [`${styles.textFieldContainerView}`];\n\n        let inputField = null;\n        \n        if (this.state.isFocused) {\n            inputTextFieldContainer.push(`${styles.focusedInputTextField}`)\n            textFieldContainerClassNames.push(`${styles.focusedTextFieldContainerView}`)\n        } else if (!this.state.isFocused && this.props.errorState) {\n            inputTextFieldContainer.push(`${styles.errorStateInputTextField}`);\n        }\n\n        if (this.props.shouldDisplayOverlay) {\n            textFieldContainerClassNames.push(`${styles.paymentProcessingTextFieldContainerView}`)\n        }\n\n        if (this.props.type === 'cc') {\n            inputTextFieldContainer.push(`${styles.ccInputTextField}`);\n            textFieldContainerClassNames.push(`${styles.ccTextFieldContainerView}`);\n            inputField = <CardNumberElement options={{...this.style, disabled: this.props.shouldDisplayOverlay}} onChange={(event) => {this.props.changeEvent(event)}} onReady={(ref) => {this.textFieldRef = ref}} className={`${styles.textField}`} onFocus={this.setActiveHandler} onBlur={this.onBlurHandler} />\n        } else if (this.props.type === 'date') {\n            inputTextFieldContainer.push(`${styles.dateInputTextField}`);\n            textFieldContainerClassNames.push(`${styles.dateTextFieldContainerView}`);\n            inputField = <CardExpiryElement options={{...this.style, disabled: this.props.shouldDisplayOverlay}} onChange={(event) => {this.props.changeEvent(event)}} onReady={(ref) => {this.textFieldRef = ref}} className={`${styles.textField}`} onFocus={this.setActiveHandler} onBlur={this.onBlurHandler} />\n        } else if (this.props.type === 'cvc') {\n            inputTextFieldContainer.push(`${styles.cvcInputTextField}`);\n            textFieldContainerClassNames.push(`${styles.cvcTextFieldContainerView}`);\n            inputField = <CardCvcElement options={{...this.style, disabled: this.props.shouldDisplayOverlay}} onChange={(event) => {this.props.changeEvent(event)}} onReady={(ref) => {this.textFieldRef = ref}} className={`${styles.textField}`} onFocus={this.setActiveHandler} onBlur={this.onBlurHandler} />\n        } else if (this.props.type === 'email') {\n            inputTextFieldContainer.push(`${styles.fullWidthInputTextField}`);\n            textFieldContainerClassNames.push(`${styles.fullWidthTextFieldContainerView}`);\n            inputField = <input type=\"text\" inputMode=\"email\" maxLength=\"30\" autocapitalize=\"off\" style={this.style.style.base} placeholder=\"Email\" ref={this.textFieldRef} className={styles.textField} onChange={(event) => {this.formatInputtedText(event)}} onFocus={this.setActiveHandler} onBlur={this.onBlurHandler} />\n        } else if (this.props.type === 'name') {\n            inputTextFieldContainer.push(`${styles.fullWidthInputTextField}`);\n            textFieldContainerClassNames.push(`${styles.fullWidthTextFieldContainerView}`);\n            inputField = <input type=\"text\" maxLength=\"30\" style={this.style.style.base} placeholder=\"Name\" ref={this.textFieldRef} className={styles.textField} onChange={(event) => {this.formatInputtedText(event)}} onFocus={this.setActiveHandler} onBlur={this.onBlurHandler} />\n        }\n\n        return (\n            <div className={inputTextFieldContainer.join(' ')} onMouseDown={(event) => {\n                this.handleClick(event)\n            }}>\n                <div className={textFieldContainerClassNames.join(' ')}>\n                    {inputField}\n                </div>\n                {this.renderIconsContainer()}\n            </div>\n        );\n    }\n\n    renderIconsContainer = () => {\n        return (\n            <div className={styles.iconsContainer}>\n                {this.props.type === 'cc'  ? <div className={!this.state.isFocused && this.props.errorState ? `${styles.icon} ${styles.invisible}` : `${styles.icon}`}><CreditCardIconsContainer /></div> : this.props.type === 'cvc' ? <img className={!this.state.isFocused && this.props.errorState ? `${styles.icon} ${styles.invisible}` : `${styles.icon}`} src={CVCIcon} alt=\"\" width=\"20\" /> : null }\n                <ErrorStateExclamationPoint displayed={!this.state.isFocused && this.props.errorState} />\n            </div>\n        )\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.props.type === 'name' || this.props.type === 'email') {\n            return this.props.errorState !== nextProps.errorState || this.state.isFocused !== nextState.isFocused\n        } else {\n            return this.props.errorState !== nextProps.errorState || this.state.isFocused !== nextState.isFocused || this.props.shouldDisplayOverlay !== nextProps.shouldDisplayOverlay || this.state.inputtedText !== nextState.inputtedText\n        }\n    }\n   \n    render() {\n        return this.renderInputFields()\n    }\n    \n}\n\nexport default InputTextField;","export default __webpack_public_path__ + \"static/media/lock.090927c7.svg\";","import styles from './GeneralActionButton.module.css';\nimport React, { Component } from 'react';\nimport Lottie from 'react-lottie';\nimport LockSVG from '../../../../Assets/lock.svg';\nimport LoadingAnimation from '../../../../Assets/loading-animation.json';\n\nclass GeneralActionButton extends React.PureComponent {\n    \n    state = {\n        isCurrentlyClicked: false\n    }\n \n    onMouseClickPress = () => {\n        this.setState({\n            isCurrentlyClicked: true\n        })\n    }\n\n    onMouseClickRelease = () => {\n        this.setState({\n            isCurrentlyClicked: false\n        })\n    }\n\n    handleOnMouseLeave = () => {\n        if (this.state.isCurrentlyClicked) {\n            this.setState({\n                isCurrentlyClicked: false\n            })\n        }\n    }\n\n    renderLottieAnimation = () => {\n        let animationOptions = {\n            loop: true,\n            autoplay: true,\n            animationData: LoadingAnimation\n        }\n\n        return (\n            <div className={styles.lottieContainer}>\n                <Lottie options={animationOptions} height={40} width={40} />\n            </div>\n        )\n    }\n\n    renderLockContainer = () => {\n        return (\n            <div className={styles.lockContainer}>\n                <img className={this.props.isActive ? `${styles.lock} ${styles.visible}` : `${styles.lock}`} src={LockSVG} alt=\"\" />\n            </div>\n        )\n    }\n\n    renderPayWithCardButton = () => {\n        return (\n            <div className={styles.buttonContentsContainer}>\n                <div className={this.props.isProcessingPayment ? `${styles.buttonTextContainer} ${styles.withLottiePadding}` : `${styles.buttonTextContainer}` }>\n                    {this.props.text}\n                </div>\n                {this.props.isProcessingPayment ? this.renderLottieAnimation() : this.renderLockContainer()}\n            </div>\n        )\n    }\n\n    render () {\n        return (\n            <div className={this.state.isCurrentlyClicked ? `${styles.PayButton} ${styles.withBackgroundColor}` : `${styles.PayButton}`}>\n                <button className={this.props.isActive ? `${styles.button} ${styles.active}` : `${styles.button}`} onMouseDown={this.onMouseClickPress} onMouseUp={this.onMouseClickRelease} onMouseLeave={this.handleOnMouseLeave} onClick={this.props.onClickHandler}>\n                    {this.renderPayWithCardButton()}\n                </button>\n            </div>\n        )\n    }\n    \n}\n\nexport default GeneralActionButton;","import styles from './ModalContainer.module.css'\nimport React, { useEffect } from 'react'\n\nconst ModalContainer = props => {\n    \n    return (\n        <div className={styles.ModalContainer}>{props.children}</div>\n    )\n}\n\nexport default React.memo(ModalContainer)","export default __webpack_public_path__ + \"static/media/contact-form.dd0c553e.svg\";","import styles from './AmountToPayTextField.module.css'\nimport React, { Component } from 'react'\nimport ContactFormSVG from '../../../../Assets/contact-form.svg'\nimport ErrorStateExclamationPoint from '../../../Presentational/ErrorStateExclamationPoint/ErrorStateExclamationPoint'\n\nclass AmountToPayTextField extends Component {\n\n    state = {\n        inputtedText: \"\",\n        isFocused: false\n    }\n\n    constructor(props) {\n        super(props)\n        \n        this.textFieldRef = React.createRef(null)\n    }\n\n    handleClick = event => {\n        if (event.target !== this.textFieldRef.current) {\n            event.preventDefault()\n        }\n\n        if (this.state.isFocused) {\n            return;\n        }\n\n        this.textFieldRef.current.focus()\n\n        this.setState({\n            isFocused: !this.state.isFocused\n        })\n    }\n\n    setActiveHandler = () => {\n        this.setState({\n            isFocused: true\n        })\n    }\n\n    onBlurHandler = () => {\n        this.setState({\n            isFocused: !this.state.isFocused\n        })\n    }\n\n    formatInputtedText = event => {\n        const regex = /^([1-9]{1}\\d{0,2})?$/\n        if (regex.test(event.target.value)) {\n            this.setState({\n                inputtedText: event.target.value\n            })\n        } else {\n            event.target.value = this.state.inputtedText\n        }\n        this.props.textChanged(event.target.value)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.state.isFocused !== nextState.isFocused || this.props.errorState !== nextProps.errorState\n    }\n\n    render() {\n        return (\n            <div className={styles.ComponentContainer}>\n                <div className={this.state.isFocused ? `${styles.amountToPayTextFieldContainerWrapper} ${styles.focusedWrapper}` : `${styles.amountToPayTextFieldContainerWrapper}` }>\n                    <div className={this.state.isFocused ? `${styles.amountToPayTextFieldContainer} ${styles.focused} `: this.props.errorState ? `${styles.amountToPayTextFieldContainer} ${styles.errorState}` : `${styles.amountToPayTextFieldContainer}` } onMouseDown={(event) => {\n                        this.handleClick(event)\n                    }}>\n                        <div className={styles.dollarSignContainer}>\n                            <span className={styles.dollarSign}>$</span>\n                        </div>\n                        <div className={styles.textFieldContainer}>\n                            <div className={styles.amountToPayText}>Enter amount to pay*</div>\n                            <input className={styles.inputTextField} ref={this.textFieldRef} type=\"text\" inputMode=\"numeric\" placeholder=\"0.00\" onChange={(event) => {this.formatInputtedText(event)}} onFocus={this.setActiveHandler} onBlur={this.onBlurHandler} />\n                            <div className={`${styles.errorStateExclamationWrapper}`}>\n                                <ErrorStateExclamationPoint displayed={!this.state.isFocused && this.props.errorState} />\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n                <div className={styles.contactFormSVGContainer}>\n                    <img className={styles.contactFormSVG} src={ContactFormSVG} />\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default AmountToPayTextField;","import styles from './Separator.module.css'\nimport React from 'react'\n\nconst Separator = () => {\n\n    return (\n        <div className={styles.Separator}></div>\n    )\n    \n}\n\nexport default React.memo(Separator)","import styles from './FromAndToPaymentContainer.module.css'\nimport Separator from '../Separator/Separator.js'\nimport React, { useEffect } from 'react'\n\nconst FromAndToPaymentContainer = props => {\n\n    return (\n        <div className={styles.FromAndToPaymentContainer}>\n            <table>\n                <tbody>\n                    <tr>\n                        <td className={styles.rawText}>To</td>\n                        <td style={{width: '100%', lineBreak: 'anywhere'}} className={styles.nameText}>{props.businessName}</td>\n                    </tr>\n                    <tr>\n                        <td className={styles.rawText}>From</td>\n                        <td style={{width: '100%', lineBreak: 'anywhere'}} className={styles.nameText}>{props.customerName}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <Separator />\n        </div>\n    )\n    \n}\n\nexport default React.memo(FromAndToPaymentContainer)","export default __webpack_public_path__ + \"static/media/company-logo.52b2b3f4.svg\";","export default __webpack_public_path__ + \"static/media/checkmark.add40fe6.svg\";","import React from 'react'\nimport ModalContainer from '../../Presentational/ModalContainer/ModalContainer'\nimport GeneralActionButton from '../Input/GeneralActionButton/GeneralActionButton'\nimport styles from './PaymentConfirmationModal.module.css'\nimport ContactFormSVG from '../../../Assets/contact-form.svg'\nimport Checkmark from '../../../Assets/checkmark.svg'\n\nconst PaymentConfirmationModal = props => {\n\n    const unixTimestamp = new Date(props.paymentDate * 1000);\n    const months = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n    const year = unixTimestamp.getFullYear();\n    const month = months[unixTimestamp.getMonth()];\n    const date = unixTimestamp.getDate();\n    const fullDate = month + \", \" + date + \" \" + year;\n\n    let formattedAmountPaid = props.amountPaid\n\n    if (props.amountPaid.length > 2) {\n        formattedAmountPaid = props.amountPaid.substring(0, props.amountPaid.length - 2) + \".\" + props.amountPaid.substring(props.amountPaid.length - 2); \n    }\n\n    return (\n        <ModalContainer>\n            <div className={styles.svgContainer}>\n                <img className={styles.paymentConfirmationContactForm} src={ContactFormSVG} alt=\"\" />\n                <img className={styles.checkoutCheckmark} src={Checkmark} alt=\"\" />\n            </div>\n            <div className={styles.containerFooter}>\n                <div className={styles.invoicePaidText}>Service Paid</div>\n                <div className={styles.amountPaidText}>${formattedAmountPaid}</div>\n\n                <div className={styles.flexContainers}>\n                <div className={styles.flexContainer}>\n                    <div className={styles.firstColumnText}>\n                        Confirmation Code\n                    </div>\n                    <div className={styles.secondColumnText}>\n                        {props.confirmationCode}\n                    </div>\n                </div>\n\n                <div className={styles.flexContainer}>\n                    <div className={styles.firstColumnText}>\n                        Payment Date\n                    </div>\n                    <div className={styles.secondColumnText}>\n                        {fullDate}\n                    </div>\n                </div>\n\n                <div className={styles.flexContainer}>\n                    <div className={styles.firstColumnText}>\n                        Payment Method\n                    </div>\n                    <div className={styles.secondColumnText}>\n                        {String(props.paymentMethodCardBrand).charAt(0).toUpperCase() + props.paymentMethodCardBrand.substring(1)} •••• {props.lastFourOfPaymentMethod}\n                    </div>\n                </div>\n                </div>\n                <div className={styles.thankYouText}>Thank you for your payment</div>\n            </div>\n        </ModalContainer>\n    )\n    \n}\n\nexport default PaymentConfirmationModal","import React from 'react'\nimport styles from './PaymentError.module.css'\nimport { useEffect } from 'react'\n\nconst PaymentError = props => {\n\n    return (\n        <div className={styles.errorTextContainer}>\n            <span className={styles.errorText}>\n                {props.errorMessage}\n            </span>\n        </div>\n    )\n    \n}\n\nexport default React.memo(PaymentError);","import axios from 'axios'\n\nlet testInstance = axios.create({\n    baseURL : 'http://localhost:8080'\n})\n\nlet productionInstance = axios.create({\n    baseURL : 'https://www.iredullc.com'\n})\n\nexport { testInstance as TestInstance, productionInstance as ProductionInstance }","export default __webpack_public_path__ + \"static/media/powered-by-stripe-white.2ae0b55f.svg\";","import styles from './PaymentForm.module.css'\nimport { PureComponent } from 'react'\nimport DateComponent from '../../Presentational/DateComponent/DateComponent.js'\nimport InputTextFieldContainer from '../../Presentational/InputTextFieldContainer/InputTextFieldContainer.js'\nimport GeneralUIElementContainer from '../../Presentational/GeneralUIElementContainer/GeneralUIElementContainer.js'\nimport InputTextField from '../Input/InputTextField/InputTextField.js'\nimport GeneralActionButton from '../Input/GeneralActionButton/GeneralActionButton.js'\nimport ModalContainer from '../../Presentational/ModalContainer/ModalContainer.js'\nimport AmountToPayTextField from '../Input/AmounToPayTextField/AmountToPayTextField.js'\nimport FromAndToPaymentContainer from '../../Presentational/FromAndToPaymentContainer/FromAndToPaymentContainer.js'\nimport CompanyNameAndLogo from '../../Presentational/CompanyNameAndLogo/CompanyNameAndLogo.js'\nimport PaymentConfirmationModal from '../PaymentConfirmationModal/PaymentConfirmationModal.js'\nimport PaymentError from '../PaymentError/PaymentError.js'\nimport { ProductionInstance as axios } from '../../../Axios/session'\nimport CardBrandContext from '../../../Context/CardBrandContext'\nimport { CardNumberElement, Elements, ElementsConsumer, } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\nimport Footer from '../../Presentational/Footer/Footer.js'\nimport FadeIn from 'react-fade-in'\nimport PoweredByStripe from '../../../../src/Assets/powered-by-stripe-white.svg'\n\nconst validator = require('email-validator')\nconst stripePromise = loadStripe('')\n\nclass PaymentForm extends PureComponent {\n\n  state = {\n      amount: {\n        value: \"\",\n        isInErrorState: false\n      },\n      email: {\n        value: \"\",\n        isInErrorState: false\n      },\n      clientName: {\n        value: \"\",\n        isInErrorState: false\n      },\n      ccNumber: {\n        isComplete: false,\n        isInErrorState: false\n      },\n      expiryDate: {\n        isComplete: false,\n        isInErrorState: false\n      },\n      cvc: {\n        isComplete: false,\n        isInErrorState: false\n      },\n      isPayWithCardButtonActive: false,\n      cardBrand: \"unknown\",\n      isPaymentRequestProcessing: false,\n      received200StatusCode: false,\n      paymentErrorMessage: \"\",\n      paymentConfirmation: {\n        confirmationCode: \"\",\n        paymentDate: \"\",\n        paymentMethodCardBrand: \"\",\n        lastFourOfPaymentMethod: \"\"\n      }\n    }\n    \n  amountChangedHandler = text => {\n    this.setState({\n      amount: {\n        value: text + \"\",\n        isInErrorState: text === \"\" ? true : false\n      }\n    }, () => {\n      this.handleCheckFormInput()\n    })\n  }\n    \n  emailChangedHandler = text => {\n    let newEmail = text\n    \n    if (validator.validate(newEmail)) {\n      this.setState({\n        email: {\n          value: newEmail,\n          isInErrorState: false\n        }\n      }, () => {\n        this.handleCheckFormInput()\n      })\n    } else {\n      this.setState({\n        email: {\n          value: \"\",\n          isInErrorState: true\n        }\n      }, () => {\n            this.handleCheckFormInput()\n      })\n    }\n  }\n    \n  clientNameChangedHandler = text => {\n    let newName = text\n\n    if (newName !== \"\") {\n      this.setState({\n        clientName: {\n          value: newName,\n          isInErrorState: false\n        }\n      }, () => {\n        this.handleCheckFormInput()\n      })\n    } else {\n      this.setState({\n        clientName: {\n          value: \"\",\n          isInErrorState: true\n        }\n      }, () => {\n        this.handleCheckFormInput()\n      })\n    }\n  }\n    \n  ccNumberChangedHandler = event => {\n    this.setState({\n      cardBrand: event.brand\n    })\n\n    if (event.complete) {\n      this.setState({\n        ccNumber: {\n          isComplete: true,\n          isInErrorState: false\n        }\n      }, () => {\n        this.handleCheckFormInput()\n      })\n    } else {\n      this.setState({\n        ccNumber: {\n          isComplete: false,\n          isInErrorState: true\n        }\n      }, () => {\n        this.handleCheckFormInput()\n      })\n    }\n  }\n    \n  expiryDateChangedHandler = event => {\n    if (event.complete) {\n      this.setState({\n        expiryDate: {\n          isComplete: true,\n          isInErrorState: false\n        }\n      }, () => {\n        this.handleCheckFormInput()\n      })\n    } else {\n      this.setState({\n        expiryDate: {\n          isComplete: false,\n          isInErrorState: true\n        }\n      }, () => {\n        this.handleCheckFormInput()\n      })\n    }\n  }\n    \n  cvcChangedHandler = event => {\n    if (event.complete) {\n      this.setState({\n        cvc: {\n          isComplete: true,\n          isInErrorState: false\n        }\n      }, () => {\n        this.handleCheckFormInput()\n      })\n    } else {\n      this.setState({\n        cvc: {\n          isComplete: false,\n          isInErrorState: true\n        }\n      }, () => {\n        this.handleCheckFormInput()\n      })\n    }\n  }\n    \n  handleCheckFormInput = () => {\n    if (this.state.amount.value !== \"\" && this.state.email.value !== \"\" && this.state.clientName.value !== \"\" && this.state.ccNumber.isComplete && this.state.expiryDate.isComplete && this.state.cvc.isComplete) {\n      this.setState({\n        isPayWithCardButtonActive: true\n      })\n    } else {\n      this.setState({\n        isPayWithCardButtonActive: false\n      })\n    }\n    this.setState({\n      paymentErrorMessage: \"\"\n    })\n  }\n    \n  handlePayButtonClick = () => {\n    if (this.state.amount.value === \"\") {\n      this.setState({\n        amount: {\n          value: \"\",\n          isInErrorState: true\n        }\n      })\n    }\n    if (this.state.email.value === \"\") {\n      this.setState({\n        email: {\n          value: \"\",\n          isInErrorState: true\n        }\n      })\n    }\n    if (this.state.clientName.value === \"\") {\n      this.setState({\n        clientName: {\n          value: \"\",\n          isInErrorState: true\n        }\n      })\n    }\n    if (this.state.ccNumber.isComplete) {\n      this.setState({\n        ccNumber: {\n          isComplete: true,\n          isInErrorState: false\n        }\n      })\n    } else {\n      this.setState({\n        ccNumber: {\n          isComplete: false,\n          isInErrorState: true\n        }\n      })\n    }\n    if (this.state.expiryDate.isComplete) {\n      this.setState({\n        expiryDate: {\n          isComplete: true,\n          isInErrorState: false\n        }\n      })\n    } else {\n      this.setState({\n        expiryDate: {\n          isComplete: false,\n          isInErrorState: true\n        }\n      })\n    }\n    if (this.state.cvc.isComplete) {\n      this.setState({\n        cvc: {\n          isComplete: true,\n          isInErrorState: false\n        }\n      })\n    } else {\n      this.setState({\n        cvc: {\n          isComplete: false,\n          isInErrorState: true\n        }\n      })\n    }\n  }\n    \n  formSubmissionHandler = async (elements, stripe) => {\n    if (this.state.isPaymentRequestProcessing || !this.state.isPayWithCardButtonActive) {\n      return\n    }\n\n    this.setState({\n      isPaymentRequestProcessing: true\n    })\n\n    if (!stripe || !elements) {\n      return\n    }\n\n    const cardElement = elements.getElement(CardNumberElement)\n\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n    })\n\n    if (error) {\n      this.handleErrorMessageFromStripeAPIOrServer(error)\n    } else {\n      this.performHTTPRequest(paymentMethod, stripe)\n    }\n  }\n\n  performHTTPRequest = (paymentMethod, stripe) => {\n    const payload = {\n      email: this.state.email.value, \n      name: this.state.clientName.value, \n      amountToPay: this.state.amount.value\n    }\n\n    axios.post('/create-payment-intent', payload).then(response => {\n      this.handle200StatusCodeFromServer(stripe, paymentMethod, response.data.clientSecret)\n    }).catch(error => {\n      this.handleErrorMessageFromStripeAPIOrServer(error)\n    })\n  }\n\n  handle200StatusCodeFromServer = (stripe, paymentMethod, paymentClientSecret) => {        \n    stripe.confirmCardPayment(paymentClientSecret, {\n      payment_method: paymentMethod.id\n    }).then((result) => {\n        if (result.error) {\n          this.handleErrorMessageFromStripeAPIOrServer(result.error.message)\n        } else {\n          this.setState({\n            isPaymentRequestProcessing: false,\n            received200StatusCode: true,\n            paymentConfirmation: {\n              amountPaid: result.paymentIntent.amount,\n              confirmationCode: result.paymentIntent.id + \"\",\n              paymentDate: result.paymentIntent.created,\n              paymentMethodCardBrand: paymentMethod.card.brand + \"\",\n              lastFourOfPaymentMethod: paymentMethod.card.last4 + \"\"\n            }\n          })\n        }\n      })\n  }\n    \n  handleErrorMessageFromStripeAPIOrServer = errorMessage => {\n    this.setState({\n      isPaymentRequestProcessing: false,\n      paymentErrorMessage: errorMessage + \"\"\n    })\n  }\n    \n  renderPaymentForm = (elements, stripe) => {\n    return (\n      <form onSubmit={(e) => {\n        e.preventDefault()\n        this.formSubmissionHandler(elements, stripe)\n      }}>\n        <FadeIn delay=\"100\" transitionDuration=\"800\">\n          <center><a href=\"https://stripe.com\"><img src={PoweredByStripe} height=\"20\"/></a></center>\n          <ModalContainer>\n            <DateComponent />\n            <GeneralUIElementContainer>\n              <AmountToPayTextField\n                textChanged={(event) => this.amountChangedHandler(event)}\n                errorState={this.state.amount.isInErrorState}\n              />\n            </GeneralUIElementContainer>\n            <GeneralUIElementContainer>\n              <FromAndToPaymentContainer\n                businessName=\"Ian Robinson\"\n                customerName={this.state.clientName.value}\n              />\n            </GeneralUIElementContainer>\n          </ModalContainer>\n        </FadeIn>\n\n        <FadeIn delay=\"900\" transitionDuration=\"800\">\n          <div>\n          <ModalContainer>\n            <InputTextFieldContainer\n              containerText=\"Client Information\"\n              shouldDisplayRequired={\n                this.state.email.isInErrorState |\n                this.state.clientName.isInErrorState\n              }\n            >\n              <InputTextField\n                type=\"email\"\n                changeEvent={this.emailChangedHandler}\n                errorState={this.state.email.isInErrorState}\n              />\n              <InputTextField\n                type=\"name\"\n                changeEvent={this.clientNameChangedHandler}\n                errorState={this.state.clientName.isInErrorState}\n              />\n            </InputTextFieldContainer>\n\n            <InputTextFieldContainer containerText=\"Card Information\"\n              shouldDisplayRequired={\n                this.state.ccNumber.isInErrorState |\n                this.state.expiryDate.isInErrorState |\n                this.state.cvc.isInErrorState\n              }\n            >\n              <div className={this.state.isPaymentRequestProcessing ? `${styles.paymentInformationFieldsContainer} ${styles.overlay}` : `${styles.paymentInformationFieldsContainer}`}>\n                <CardBrandContext.Provider value={{cardBrand:this.state.cardBrand}}>\n                  <InputTextField\n                      shouldDisplayOverlay={this.state.isPaymentRequestProcessing}\n                      type=\"cc\"\n                      changeEvent={(event) => {\n                        this.ccNumberChangedHandler(event)\n                      }}\n                      errorState={this.state.ccNumber.isInErrorState}\n                  />\n                </CardBrandContext.Provider>\n                <InputTextField\n                  shouldDisplayOverlay={this.state.isPaymentRequestProcessing}\n                  type=\"date\"\n                  changeEvent={(event) => {\n                    this.expiryDateChangedHandler(event)\n                  }}\n                  errorState={this.state.expiryDate.isInErrorState}\n                />\n                <InputTextField\n                  shouldDisplayOverlay={this.state.isPaymentRequestProcessing}\n                  type=\"cvc\"\n                  changeEvent={(event) => {\n                    this.cvcChangedHandler(event)\n                  }}\n                  errorState={this.state.cvc.isInErrorState}\n                />\n              </div>\n            </InputTextFieldContainer>\n            {this.renderPaymentErrorComponent()}\n            <GeneralUIElementContainer>\n              <GeneralActionButton isActive={this.state.isPayWithCardButtonActive} isProcessingPayment={this.state.isPaymentRequestProcessing} text={this.state.isPaymentRequestProcessing ? \"Processing...\" : this.state.amount.value === \"\" ? \"Enter Amount To Pay\" : \"Pay $\" + this.state.amount.value} onClickHandler={this.handlePayButtonClick} />\n            </GeneralUIElementContainer>\n          </ModalContainer>\n          </div>\n        </FadeIn>\n      </form>\n    )\n  }\n    \n  renderPaymentErrorComponent = () => {\n    return (\n      <div className={this.state.paymentErrorMessage !== \"\" ? `${styles.paymentErrorAnimationContainer} ${styles.visible}` : `${styles.paymentErrorAnimationContainer}`}>\n        <PaymentError errorMessage={this.state.paymentErrorMessage} />\n      </div>\n    )\n  }\n    \n  renderPaymentConfirmationModal = () => {\n    return (\n      <FadeIn transitionDuration=\"400\">\n        <PaymentConfirmationModal amountPaid={String(this.state.paymentConfirmation.amountPaid)} confirmationCode={this.state.paymentConfirmation.confirmationCode} paymentDate={this.state.paymentConfirmation.paymentDate} paymentMethodCardBrand={this.state.paymentConfirmation.paymentMethodCardBrand} lastFourOfPaymentMethod={this.state.paymentConfirmation.lastFourOfPaymentMethod} />\n      </FadeIn>\n    )\n  }\n    \n  InjectedForm = () => {\n    return (\n      <ElementsConsumer>\n        {({elements, stripe}) => {\n          return this.renderPaymentForm(elements, stripe)\n        }}\n      </ElementsConsumer>\n    )\n  }\n    \n  render = () => {\n    const jsx = !this.state.received200StatusCode ? this.InjectedForm() : this.renderPaymentConfirmationModal()\n\n    if (!this.state.received200StatusCode) {\n      return (\n        <Elements stripe={stripePromise}>\n          <div id=\"Root\">\n            {jsx}\n          </div>\n        </Elements>\n      )\n    } else {\n      return (\n        <div id=\"Root\">\n          {jsx}\n        </div>\n      )\n    }\n  }\n  \n}\n\nexport default PaymentForm","export default __webpack_public_path__ + \"static/media/twitter-logo.665d9096.svg\";","import './App.css'\nimport PaymentForm from './Components/Containers/PaymentForm/PaymentForm'\n\nconst App = () => {\n  return <PaymentForm />\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paymentInformationFieldsContainer\":\"PaymentForm_paymentInformationFieldsContainer__3Kf9C\",\"overlay\":\"PaymentForm_overlay__MomBJ\",\"paymentErrorAnimationContainer\":\"PaymentForm_paymentErrorAnimationContainer__2sklB\",\"visible\":\"PaymentForm_visible__1Xshb\",\"Container\":\"PaymentForm_Container__1qz7K\",\"poweredByStripeImage\":\"PaymentForm_poweredByStripeImage__2DZeX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"InputTextFieldContainer_Container__1ZgmF\",\"headerContainer\":\"InputTextFieldContainer_headerContainer__1tDb2\",\"containerText\":\"InputTextFieldContainer_containerText__1SCBF\",\"requiredText\":\"InputTextFieldContainer_requiredText__146dD\",\"visible\":\"InputTextFieldContainer_visible__2ql-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputTextField\":\"InputTextField_InputTextField__1GKE7\",\"ccInputTextField\":\"InputTextField_ccInputTextField__2MK9m\",\"dateInputTextField\":\"InputTextField_dateInputTextField__1ilAb\",\"cvcInputTextField\":\"InputTextField_cvcInputTextField__XIIBD\",\"fullWidthInputTextField\":\"InputTextField_fullWidthInputTextField__1ZGW9\",\"focusedInputTextField\":\"InputTextField_focusedInputTextField__13Ma4\",\"errorStateInputTextField\":\"InputTextField_errorStateInputTextField__1SXiW\",\"textFieldContainerView\":\"InputTextField_textFieldContainerView__3lHtK\",\"paymentProcessingTextFieldContainerView\":\"InputTextField_paymentProcessingTextFieldContainerView__3jyfe\",\"ccTextFieldContainerView\":\"InputTextField_ccTextFieldContainerView__tPrzL\",\"dateTextFieldContainerView\":\"InputTextField_dateTextFieldContainerView__1xrE6\",\"cvcTextFieldContainerView\":\"InputTextField_cvcTextFieldContainerView__2efp1\",\"fullWidthTextFieldContainerView\":\"InputTextField_fullWidthTextFieldContainerView__d9R5r\",\"focusedTextFieldContainerView\":\"InputTextField_focusedTextFieldContainerView__Mo-jx\",\"textField\":\"InputTextField_textField__Zx1ji\",\"iconsContainer\":\"InputTextField_iconsContainer__2f2lW\",\"icon\":\"InputTextField_icon__2Q66L\",\"invisible\":\"InputTextField_invisible__19ocp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorStateExclamationWrapper\":\"ErrorStateExclamationPoint_ErrorStateExclamationWrapper__-xvkU\",\"errorStatePointerContainer\":\"ErrorStateExclamationPoint_errorStatePointerContainer__2ZmKH\",\"visible\":\"ErrorStateExclamationPoint_visible__283hh\",\"errorStatePointer\":\"ErrorStateExclamationPoint_errorStatePointer__3pzR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FromAndToPaymentContainer\":\"FromAndToPaymentContainer_FromAndToPaymentContainer__8x4VR\",\"rawText\":\"FromAndToPaymentContainer_rawText__4pRHW\",\"nameText\":\"FromAndToPaymentContainer_nameText__1VBD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ComponentContainer\":\"AmountToPayTextField_ComponentContainer__3uNqx\",\"amountToPayTextFieldContainerWrapper\":\"AmountToPayTextField_amountToPayTextFieldContainerWrapper__-HY2n\",\"focusedWrapper\":\"AmountToPayTextField_focusedWrapper__1_8ry\",\"amountToPayTextFieldContainer\":\"AmountToPayTextField_amountToPayTextFieldContainer__35_K9\",\"focused\":\"AmountToPayTextField_focused__1dGwO\",\"errorState\":\"AmountToPayTextField_errorState__27luh\",\"contactFormSVGContainer\":\"AmountToPayTextField_contactFormSVGContainer__1x5mB\",\"contactFormSVG\":\"AmountToPayTextField_contactFormSVG__3IBb9\",\"dollarSignContainer\":\"AmountToPayTextField_dollarSignContainer__5F4SJ\",\"dollarSign\":\"AmountToPayTextField_dollarSign__2q-Tu\",\"textFieldContainer\":\"AmountToPayTextField_textFieldContainer__jrcYh\",\"amountToPayText\":\"AmountToPayTextField_amountToPayText___vCDB\",\"inputTextField\":\"AmountToPayTextField_inputTextField__3ype-\",\"errorStateExclamationWrapper\":\"AmountToPayTextField_errorStateExclamationWrapper__HJsHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreditCardIconsContainer\":\"MajorCardBrandsContainer_CreditCardIconsContainer__1MuB3\",\"creditCardIcon\":\"MajorCardBrandsContainer_creditCardIcon__1Nwbo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreditCardIconsContainer\":\"MinorCardBrandsContainer_CreditCardIconsContainer__3buZv\",\"creditCardIcon\":\"MinorCardBrandsContainer_creditCardIcon__VDpxy\",\"visible\":\"MinorCardBrandsContainer_visible__33cXI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreditCardIconsContainer\":\"MobilePhonesCardBrandsContainer_CreditCardIconsContainer__3EknP\",\"creditCardIcon\":\"MobilePhonesCardBrandsContainer_creditCardIcon__3gSqQ\",\"visible\":\"MobilePhonesCardBrandsContainer_visible__3AH-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerContainer\":\"Footer_footerContainer__Y7QNJ\",\"stripeLogoContainer\":\"Footer_stripeLogoContainer__2zKef\",\"twitterHandleContainer\":\"Footer_twitterHandleContainer__iXcHy\",\"twitterLogo\":\"Footer_twitterLogo__1Bh0R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svgContainer\":\"PaymentConfirmationModal_svgContainer__dRYOg\",\"paymentConfirmationContactForm\":\"PaymentConfirmationModal_paymentConfirmationContactForm__w4zDo\",\"checkoutCheckmark\":\"PaymentConfirmationModal_checkoutCheckmark__17oKC\",\"containerFooter\":\"PaymentConfirmationModal_containerFooter__3VQtJ\",\"invoicePaidText\":\"PaymentConfirmationModal_invoicePaidText__3f3Z1\",\"amountPaidText\":\"PaymentConfirmationModal_amountPaidText__NLQgy\",\"flexContainers\":\"PaymentConfirmationModal_flexContainers__3kG1v\",\"flexContainer\":\"PaymentConfirmationModal_flexContainer__9MvVu\",\"firstColumnText\":\"PaymentConfirmationModal_firstColumnText__3CZwg\",\"secondColumnText\":\"PaymentConfirmationModal_secondColumnText__1FRtl\",\"thankYouText\":\"PaymentConfirmationModal_thankYouText__3np5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreditCardIconsContainer\":\"EnteredCardBrandContainer_CreditCardIconsContainer__1sRrZ\",\"creditCardIcon\":\"EnteredCardBrandContainer_creditCardIcon__2PWYo\",\"visible\":\"EnteredCardBrandContainer_visible__186p5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PayButton\":\"GeneralActionButton_PayButton__3UlnG\",\"withBackgroundColor\":\"GeneralActionButton_withBackgroundColor__1mEfE\",\"button\":\"GeneralActionButton_button__2MlHv\",\"active\":\"GeneralActionButton_active__3t-HS\",\"buttonContentsContainer\":\"GeneralActionButton_buttonContentsContainer__2KqCf\",\"buttonTextContainer\":\"GeneralActionButton_buttonTextContainer__1bEWu\",\"withLottiePadding\":\"GeneralActionButton_withLottiePadding__1LiOB\",\"lockContainer\":\"GeneralActionButton_lockContainer__3qqW8\",\"lock\":\"GeneralActionButton_lock__yWC8z\",\"visible\":\"GeneralActionButton_visible__3xS3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CompanyNameAndLogo\":\"CompanyNameAndLogo_CompanyNameAndLogo__5eHSQ\",\"companyName\":\"CompanyNameAndLogo_companyName__c2niW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorTextContainer\":\"PaymentError_errorTextContainer__3Ou7l\",\"errorText\":\"PaymentError_errorText__2te4B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dateText\":\"DateComponent_dateText__29wdx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GeneralUIElementContainer\":\"GeneralUIElementContainer_GeneralUIElementContainer__2SSpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBrandsContainer\":\"CreditCardIconsContainer_cardBrandsContainer__1C7-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContainer\":\"ModalContainer_ModalContainer__3yE04\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Separator\":\"Separator_Separator__fXWmj\"};"],"sourceRoot":""}